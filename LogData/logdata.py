'''
Read .log files inside a directory generated by Gaussian, extract specific data such as : coordinates, forces, energy...
Fill a DataFrame with these data and save as hdf5
Note : the previous .h5 data file can be specified to retreive the SMILES, InchI, molecular formula and PM6 energy
'''

import pandas as pd
import numpy as np
import glob
from Utils.utils import *
from Utils.gaussian import *

#Main

args = getArguments()

inFile = args.infile
outputParentDir = args.outfile

#tracker for files that couldn't be read due to an error
missedFiles = []

files = sorted(glob.glob(args.logdir +"/*.log"))

#final output dataframe
#df = pd.DataFrame()
nlines=len(files)
#df = getNanGaussianDataFrame(nlines)
df = pd.DataFrame()

for i, file in enumerate(files):
    print('=============', i,'/',nlines, ':', file, '=======================')
    row = readGaussianLogFile(file)
    if row.empty == False:
        if df.empty :
            df = row.iloc[0:1]
        else:
            df = pd.concat([df, row.iloc[0:1]], join="inner")
    else:
        missedFiles.append(file)    

print('==================================')
print('Files omitted due to reading error : ', len(missedFiles))
for f in missedFiles:
    print('    ', f)
print('==================================')

#index by cid
df.set_index('cid', inplace = True)

#Save data to a single hdf file
print('Data without Formula, InChi, SMILE savec in', args.outfile)
df.to_hdf(args.outfile, 'df')

if inFile != 'default' : #old .h5 file is provided in args
    #we check if the file exist and if CIDs are the same
    #then we insert columns to the dataframe
    try:
        print('Read Formula, InChi and SMILE from : ', inFile)
        data = pd.read_hdf(inFile, 'df')
        if 'cid' in data.columns.values: #if index is not cid we set it
            data.set_index('cid', inplace=True)
         
        cols = []
        for key in data.columns.values: 
             if key.lower().find("formula") != -1  or  key.lower().find("inchi") != -1 or  key.lower().find("smiles") != -1:
                cols = cols +[key]
        data = data[cols]
        data.sort_index(inplace=True)

        if not (len(data.index) == len(df.index) and  data.index.equals(df.index)) :
            print('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')
            print('WARNING : cid are not the same')
            print('        : we merge the 2 dataframe')
            print('Size of old dataframe : ', len(data.index))
            print('Number of log file : ', len(df.index))
            print('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')
        df = pd.merge(data, df, left_index=True, right_index=True)
        outFileName =os.path.splitext(args.outfile)[0]+"_all.h5"
        print('Data with Formula, InChi and SMILE saved in', outFileName)
        df.to_hdf(outFileName, 'df')

    except:
        print('\n??????????????????????????????????????????????????????????????????????????')
        print('Error : --infile specified but could\'t load file or no cid seems to match')
        print('??????????????????????????????????????????????????????????????????????????')
        
